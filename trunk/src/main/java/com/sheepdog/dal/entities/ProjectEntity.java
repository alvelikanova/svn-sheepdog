package com.sheepdog.dal.entities;

// Generated 13.12.2013 11:09:05 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * ProjectEntity generated by hbm2java
 */
@Entity
@Table(name = "PROJECT", uniqueConstraints = { @UniqueConstraint(columnNames = "NAME"),
		@UniqueConstraint(columnNames = "URL") })
public class ProjectEntity extends GenericDalEntity<Integer> implements java.io.Serializable {
	private static final long serialVersionUID = 8016705173527321085L;
	private String name;
	private String url;
	private Set<FileEntity> fileEntities = new HashSet<FileEntity>(0);
	private Set<UserEntity> userEntities = new HashSet<UserEntity>(0);
	private Set<RevisionEntity> revisionEntities = new HashSet<RevisionEntity>(0);

	public ProjectEntity() {
	}

	public ProjectEntity(String name, String url) {
		this.name = name;
		this.url = url;
	}

	public ProjectEntity(String name, String url, Set<FileEntity> fileEntities, Set<UserEntity> userEntities,
			Set<RevisionEntity> revisionEntities) {
		this.name = name;
		this.url = url;
		this.fileEntities = fileEntities;
		this.userEntities = userEntities;
		this.revisionEntities = revisionEntities;
	}

	@Column(name = "NAME", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "URL", unique = true, nullable = false)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectEntity")
	public Set<FileEntity> getFileEntities() {
		return this.fileEntities;
	}

	public void setFileEntities(Set<FileEntity> fileEntities) {
		this.fileEntities = fileEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectEntity")
	public Set<UserEntity> getUserEntities() {
		return this.userEntities;
	}

	public void setUserEntities(Set<UserEntity> userEntities) {
		this.userEntities = userEntities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectEntity")
	public Set<RevisionEntity> getRevisionEntities() {
		return this.revisionEntities;
	}

	public void setRevisionEntities(Set<RevisionEntity> revisionEntities) {
		this.revisionEntities = revisionEntities;
	}

}
